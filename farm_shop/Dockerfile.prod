###########
# BUILDER #
###########

# pull official base image
FROM python:3.8.3-alpine as builder

# set work directory
WORKDIR /usr/src/farm_shop


# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV VIRTUAL_ENV=/opt/venv
RUN python3 -m venv $VIRTUAL_ENV

ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# install psycopg2 && Pillow dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev \
    && apk add --virtual build-deps gcc python3-dev musl-dev \
    && apk add postgresql \
    && apk add postgresql-dev \
    && pip3 install psycopg2 \
    && apk add jpeg-dev zlib-dev libjpeg \
    && pip3 install Pillow \
    && apk del build-deps

# lint
RUN pip3 install --upgrade pip
RUN pip3 install flake8
COPY . .
RUN flake8 --ignore=E501,F401 ./farm

# install dependencies
COPY ./requirements.txt .
RUN pip3 install wheel
RUN pip3 wheel --no-cache-dir --no-deps --wheel-dir /usr/src/farm_shop/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8.3-alpine

# create directory for the app user
RUN mkdir -p /home/farm_shop

# create the app user
RUN addgroup -S farm_shop && adduser -S farm_shop -G farm_shop

# create the appropriate directories
ENV HOME=/home/farm_shop
ENV APP_HOME=/home/farm_shop/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static
RUN mkdir $APP_HOME/media
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /usr/src/farm_shop/wheels /wheels
COPY --from=builder /usr/src/farm_shop/requirements.txt .
RUN pip3 install --no-cache /wheels/*


# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R farm_shop:farm_shop $APP_HOME
RUN ["chmod", "+x", "/home/farm_shop/web/entrypoint.prod.sh"]

# change to the app user
USER farm_shop
RUN pwd
# run entrypoint.prod.sh
ENTRYPOINT ["/home/farm_shop/web/entrypoint.prod.sh"]